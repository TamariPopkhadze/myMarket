openapi: 3.0.0
info:
  title: mymarket
  description: myMarket API
  version: 0.1.9

servers:
  - url: http://localhost:3003/api
    description: local server
  # - url: https://todo-api-rsne.onrender.com/api
  #   description: todo server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /allUsers:
    get:
      tags:
        - User
      summary: Get all users
      description: Retrieve a list of all users.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successfully fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /auth/login:
    post:
      tags:
        - User    
      requestBody:
        description: login user
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string         
            example:
                email: popkhadze@ggmail.com
                password: paroli
      responses:
        "200":
          description: login successfully
  /auth/register:
    post:
      tags:
        - User
      requestBody:
        description: register user
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                balance: 
                  type: number
                email:
                  type: string
                password:
                  type: string
                userType:
                  type: string
                isAdmin:
                  type: boolean           
            example:
                firstName: tamari
                lastName: popkhadze
                balance: 3000
                email: popkhadze@ggmail.com
                password: paroli
                userType: seller
                isAdmin: false
      responses:
        "200":
          description: user created
  /productType/addNewProducttype:
    post:
      tags:
        - productType
      security:
        - bearerAuth: []
      requestBody:
        description: add new ProductType
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string          
            example:
                name: clothes
      responses:
        "200":
          description: user created
  /productType/allProductstype:
    get:
      tags:
        - productType
      summary: Get all productType
      description: Retrieve a list of all productType.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successfully fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /product/addNewProduct:
    post:
      tags:
        - product
      security:
        - bearerAuth: []
      requestBody:
        description: add new Product
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                price: 
                  type: number
                userId:
                  type: number
                typeId:
                  type: number           
            example:
                title: T-shirt
                description: new
                price: 23
                userId: 2
                typeId: 1
      responses:
        "200":
          description: user created
  /product/allProducts:
    get:
      tags:
        - product
      summary: Get all product
      description: Retrieve a list of all product.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successfully fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /product/{id}:  
    get:
      tags:
        - product
      summary: Get a product by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path    
          name: id   
          schema:
            type: number  
          required: true  
      responses:
        '200':
          description: OK
  /product/update/{id}:  
    patch:
      parameters:
        - in: path    
          name: id   
          schema:
            type: number
      tags:
        - product
      security:
        - bearerAuth: []
      requestBody:
        description: update user
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                title:
                  type: string
                description:
                  type: string
                price: 
                  type: number
                userId:
                  type: number
                          
            example:
                title: T-shirt
                description: new
                price: 23
                userId: 2
                
      responses:
        '200':
          description: OK
  /product/delete/{id}:  
    delete:
      parameters:
        - in: path    
          name: id   
          schema:
            type: number
      tags:
        - product
      security:
        - bearerAuth: []
      requestBody:
        description: delete product
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                userId:
                  type: number          
            example:
                userId: 2
      responses:
        '200':
          description: OK
  /buy/product/{id}:
    post:
      parameters:
        - in: path    
          name: id   
          schema:
            type: number
      tags:
        - Buy Product
      security:
        - bearerAuth: []
      requestBody:
        description: Buy Product
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: number           
            example:
                userId: 1
      responses:
        "200":
          description: buy successfully
  /transactions:
    get:
      tags:
        - transactions
      summary: Get all transactions
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successfully fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object